// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mobileService/models"
)

// PatchArticlesArticleIDOKCode is the HTTP code returned for type PatchArticlesArticleIDOK
const PatchArticlesArticleIDOKCode int = 200

/*PatchArticlesArticleIDOK Starred property updated OK

swagger:response patchArticlesArticleIdOK
*/
type PatchArticlesArticleIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPatchArticlesArticleIDOK creates PatchArticlesArticleIDOK with default headers values
func NewPatchArticlesArticleIDOK() *PatchArticlesArticleIDOK {

	return &PatchArticlesArticleIDOK{}
}

// WithPayload adds the payload to the patch articles article Id o k response
func (o *PatchArticlesArticleIDOK) WithPayload(payload *models.Response) *PatchArticlesArticleIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch articles article Id o k response
func (o *PatchArticlesArticleIDOK) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchArticlesArticleIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchArticlesArticleIDNotFoundCode is the HTTP code returned for type PatchArticlesArticleIDNotFound
const PatchArticlesArticleIDNotFoundCode int = 404

/*PatchArticlesArticleIDNotFound Requested category does not exist

swagger:response patchArticlesArticleIdNotFound
*/
type PatchArticlesArticleIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewPatchArticlesArticleIDNotFound creates PatchArticlesArticleIDNotFound with default headers values
func NewPatchArticlesArticleIDNotFound() *PatchArticlesArticleIDNotFound {

	return &PatchArticlesArticleIDNotFound{}
}

// WithPayload adds the payload to the patch articles article Id not found response
func (o *PatchArticlesArticleIDNotFound) WithPayload(payload *models.Response) *PatchArticlesArticleIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch articles article Id not found response
func (o *PatchArticlesArticleIDNotFound) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchArticlesArticleIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
