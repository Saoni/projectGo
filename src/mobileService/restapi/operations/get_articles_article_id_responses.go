// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "mobileService/models"
)

// GetArticlesArticleIDOKCode is the HTTP code returned for type GetArticlesArticleIDOK
const GetArticlesArticleIDOKCode int = 200

/*GetArticlesArticleIDOK Article details including overview and body

swagger:response getArticlesArticleIdOK
*/
type GetArticlesArticleIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Article `json:"body,omitempty"`
}

// NewGetArticlesArticleIDOK creates GetArticlesArticleIDOK with default headers values
func NewGetArticlesArticleIDOK() *GetArticlesArticleIDOK {

	return &GetArticlesArticleIDOK{}
}

// WithPayload adds the payload to the get articles article Id o k response
func (o *GetArticlesArticleIDOK) WithPayload(payload *models.Article) *GetArticlesArticleIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get articles article Id o k response
func (o *GetArticlesArticleIDOK) SetPayload(payload *models.Article) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArticlesArticleIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetArticlesArticleIDNotFoundCode is the HTTP code returned for type GetArticlesArticleIDNotFound
const GetArticlesArticleIDNotFoundCode int = 404

/*GetArticlesArticleIDNotFound Requested article does not exist

swagger:response getArticlesArticleIdNotFound
*/
type GetArticlesArticleIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewGetArticlesArticleIDNotFound creates GetArticlesArticleIDNotFound with default headers values
func NewGetArticlesArticleIDNotFound() *GetArticlesArticleIDNotFound {

	return &GetArticlesArticleIDNotFound{}
}

// WithPayload adds the payload to the get articles article Id not found response
func (o *GetArticlesArticleIDNotFound) WithPayload(payload *models.Response) *GetArticlesArticleIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get articles article Id not found response
func (o *GetArticlesArticleIDNotFound) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetArticlesArticleIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
